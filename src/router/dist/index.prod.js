Object.defineProperty(exports, '__esModule', { value: !0 }), exports.default = void 0; const _vue = _interopRequireDefault(require('vue')); const _vueRouter = _interopRequireDefault(require('vue-router')); const _Home = _interopRequireDefault(require('@/views/Home.vue')); const _index = _interopRequireDefault(require('@/store/index'));

function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; } function _typeof(e) { return (_typeof = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ? function (e) { return typeof e; } : function (e) { return e && typeof Symbol === 'function' && e.constructor === Symbol && e !== Symbol.prototype ? 'symbol' : typeof e; })(e); } function _getRequireWildcardCache() { if (typeof WeakMap !== 'function') return null; const e = new WeakMap(); return _getRequireWildcardCache = function () { return e; }, e; } function _interopRequireWildcard(e) { if (e && e.__esModule) return e; if (e === null || _typeof(e) !== 'object' && typeof e !== 'function') return { default: e }; const t = _getRequireWildcardCache(); if (t && t.has(e)) return t.get(e); let r; const o = {}; const u = Object.defineProperty && Object.getOwnPropertyDescriptor; for (const n in e) { Object.prototype.hasOwnProperty.call(e, n) && ((r = u ? Object.getOwnPropertyDescriptor(e, n) : null) && (r.get || r.set) ? Object.defineProperty(o, n, r) : o[n] = e[n]); } return o.default = e, t && t.set(e, o), o; }_vue.default.use(_vueRouter.default); const routes = [{ path: '/', name: 'Home', component: _Home.default }, {
  path: '/barang', name: 'Barang', component() { return Promise.resolve().then(() => _interopRequireWildcard(require('@/views/Barang.vue'))); }, meta: { authentication: !0 },
}, {
  path: '/kampus', name: 'Kampus', component() { return Promise.resolve().then(() => _interopRequireWildcard(require('@/views/Kampus.vue'))); }, meta: { authentication: !0 },
}, {
  path: '/profile', name: 'Profile', component() { return Promise.resolve().then(() => _interopRequireWildcard(require('@/views/Profile.vue'))); }, meta: { authentication: !0 },
}]; const router = new _vueRouter.default({ mode: 'history', base: process.env.BASE_URL, routes }); router.beforeEach((e, t, r) => { e.matched.some((e) => e.meta.authentication) && (_index.default.getters.token ? r() : r({ path: '/' })), r(); }); const _default = router; exports.default = router;
